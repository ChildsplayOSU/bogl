game Example1

type Board = Grid(1,1) of Int
type Input = Position

succ : Int -> Int
succ(x) = x+1

add : (Int, Int) -> Int
add(x,y) = x+y


addPlusOne : (Int, Int) -> Int
addPlusOne(x,y) = succ(add(x,y))

example :  Int
example = addPlusOne(3,2)


safeDivide : (Int, Int) -> Int|Nothing
safeDivide (x, y) = if y == 0 then Nothing else x / y

useSafe : Int | Nothing -> Int
useSafe(x) = case x of Nothing -> 0 | x + 1


isTen : Int -> Bool
isTen(x) = x == 10
-- App "addPlusOne" [1,2] -> succ(add)


notTypeError3 : Int -> Int | Option1 | Option2
notTypeError3(x) = if x == 0 then Option1 else if x == 1 then Option2 else x

addMoreExt : Int | Option1 | Option2 -> Int | Option1 | Option2 | Option3
addMoreExt(x) = case x of
              Option1 -> Option2
              Option2 -> Option3
              | if x == -1 then Option1 else x
