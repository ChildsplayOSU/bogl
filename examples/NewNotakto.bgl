game NoTakTo

type Board = Grid(3,3) of X|O|Empty
type Input = Position

empty : Board
empty(x,y) = Empty 

-- This is kind of frustrating. Potential builtin, or a language pragma that prevents you from placing on a spot that already has pieces would be cool.
move : Board -> Board | Failed
move(b) = let pos = input(b) in
          if b ! pos == Empty then place(X, b, pos) else Failed

doMove : Board -> Board
doMove(b) = let x = move(b) in case x of
          Failed -> doMove(b) -- recursion just works for some reason.
          | x

-- anyways.

status : Board -> Bool
status(b) = if inARow(3, X, b) then False else True

gameLoop : Board -> Board
gameLoop(b) = while status(b) do doMove(b)

identity : Bool -> Bool 
identity(b) = b && b  

contrivedGameLoop : Board -> Board
contrivedGameLoop(b) = while identity(status(b)) do doMove(b) 
